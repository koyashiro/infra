name: terraform

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  pull-requests: write

jobs:
  check-diff:
    runs-on: ubuntu-22.04
    outputs:
      target: ${{ steps.changes.outputs.target == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            target:
              - 'terraform/**/*'
              - '.github/workflows/terraform.yml'

  terraform-fmt:
    runs-on: ubuntu-22.04
    needs: [check-diff]
    if: needs.check-diff.outputs.target == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup aqua
        uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: v2.27.0
      - name: Run terraform fmt
        working-directory: "./terraform"
        run: terraform fmt -check -recursive

  terraform-validate:
    name: terraform-validate (${{ matrix.dir }})
    runs-on: ubuntu-22.04
    needs: [check-diff]
    if: needs.check-diff.outputs.target == 'true'
    strategy:
      matrix:
        include:
          - { dir: koyashiro.net, prefix: KOYASHIRO_NET }
    env:
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ secrets[format('{0}_TF_WORKSPACE', matrix.prefix)] }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup aqua
        uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: v2.27.0
      - name: Run terraform init
        working-directory: "./terraform/${{ matrix.dir }}"
        run: terraform init
      - name: Run terraform validate
        working-directory: "./terraform/${{ matrix.dir }}"
        run: terraform validate

  tflint:
    runs-on: ubuntu-22.04
    needs: [check-diff]
    if: needs.check-diff.outputs.target == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup aqua
        uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: v2.27.0
      - name: Cache tflint plugin dir
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('terraform/.tflint.hcl') }}
      - name: Init TFLint
        working-directory: "./terraform"
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Run TFLint
        working-directory: "./terraform"
        run: tflint -f compact

  terraform-plan:
    name: terraform-plan (${{ matrix.dir }})
    runs-on: ubuntu-22.04
    needs: [check-diff]
    if: needs.check-diff.outputs.target == 'true'
    strategy:
      matrix:
        include:
          - { dir: koyashiro.net, prefix: KOYASHIRO_NET }
    env:
      TFCMT_MASKS: "env:TF_VAR_cloudflare_api_token,env:TF_VAR_cloudflare_zone_id"
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ secrets[format('{0}_TF_WORKSPACE', matrix.prefix)] }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets[format('{0}_CLOUDFLARE_ZONE_ID', matrix.prefix)] }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup aqua
        uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: v2.27.0
      - name: Run terraform init
        working-directory: "./terraform/${{ matrix.dir }}"
        run: terraform init
      - name: Run terraform plan
        working-directory: "./terraform/${{ matrix.dir }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt plan -patch -- terraform plan -no-color

  terraform-apply:
    name: terraform-apply (${{ matrix.dir }})
    runs-on: ubuntu-22.04
    needs: [check-diff, terraform-plan]
    if: needs.check-diff.outputs.target == 'true' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - { dir: koyashiro.net, prefix: KOYASHIRO_NET }
    env:
      TFCMT_MASKS: "env:TF_VAR_cloudflare_api_token,env:TF_VAR_cloudflare_zone_id"
      TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: ${{ secrets[format('{0}_TF_WORKSPACE', matrix.prefix)] }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets[format('{0}_CLOUDFLARE_ZONE_ID', matrix.prefix)] }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup aqua
        uses: aquaproj/aqua-installer@4551ec64e21bf0f557c2525135ff0bd2cba40ec7 # v3.0.0
        with:
          aqua_version: v2.27.0
      - name: Run terraform init
        working-directory: "./terraform/${{ matrix.dir }}"
        run: terraform init
      - name: Run terraform apply
        working-directory: "./terraform/${{ matrix.dir }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt apply -- terraform apply -auto-approve -no-color
